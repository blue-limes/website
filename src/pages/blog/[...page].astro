---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import PostCard from "@/components/blog/PostCard.astro";

import type { GetStaticPaths } from "astro";
import type { AstroPost } from "@/types/types";

export const getStaticPaths = (async ({ paginate }) => {
  const posts = (await getCollection("blog")).sort((a: any, b: any) => {
    return b.data.date - a.data.date;
  });

  return paginate(posts, { pageSize: 10 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const pageNums = Array.from({ length: page.lastPage }, (_, i) => i + 1);
---

<Layout
  title="Blog"
  description="Technical and business blog posts by the Blue Limes team."
>
  <main class="blog">
    <div class="container">
      <header class="blog__header">
        <h1>Blog</h1>
      </header>
      <ul class="blog__list list-reset">
        {
          page.data.map((post) => (
            <li class="blog__item">
              <PostCard post={post as unknown as AstroPost} />
            </li>
          ))
        }
      </ul>

      {
        page.lastPage > 1 && (
          <nav>
            {page.url.prev && <a href={page.url.prev}>Previous Page</a>}
            {pageNums.map((num) => (
              <a href={`/blog/${num === 1 ? "" : num + "/"}`}>{num}</a>
            ))}
            {page.url.next && <a href={page.url.next}>Next Page</a>}
          </nav>
        )
      }
    </div>
  </main>
</Layout>

<style lang="scss">
  .blog {
    padding-top: var(--space-large);
    padding-bottom: var(--space-large);

    &__header {
      display: grid;
      place-content: center;
      margin-right: auto;
      margin-bottom: var(--space-large);
      margin-left: auto;
      padding: var(--space-medium) 0;
      height: round(down, 40rem, 5rem);
      width: round(down, 100%, 5rem);

      background-image: linear-gradient(
          to left,
          var(--grey-300) 0,
          transparent 0.05rem,
          transparent calc(100% - 0.05rem),
          var(--grey-300) 100%
        ),
        linear-gradient(
          to bottom,
          var(--grey-300) 0,
          transparent 0.05rem,
          transparent calc(100% - 0.05rem),
          var(--grey-300) 100%
        );
      background-size: 5rem 5rem;
      border: 0.05rem solid var(--grey-200);

      @media (min-width: 32rem) {
        padding: var(--space-medium);
      }

      @media (min-width: 48rem) {
        padding: var(--space-large);
      }
    }

    &__list {
      > li + li {
        margin-top: calc(3 * var(--space-large));
      }
    }
  }
</style>
